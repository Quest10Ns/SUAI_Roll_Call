from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, InlineKeyboardMarkup, \
    InlineKeyboardButton

from app.database.requests import get_data_pair, get_teachers_initials, get_number_pair_by_data

from aiogram.utils.keyboard import InlineKeyboardBuilder

import datetime

start_buttons = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å'), KeyboardButton(text='–°—Ç—É–¥–µ–Ω—Ç')]],
                                    resize_keyboard=True)

space = ReplyKeyboardRemove()

back = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='–ù–∞–∑–∞–¥')]],
                           resize_keyboard=True)

edit_button = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='‚úÖ–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='data_is_right'),
     InlineKeyboardButton(text='‚úèÔ∏è–ò–∑–º–µ–Ω–∏—Ç—å', callback_data='editor')]])


edit_main_buttons = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='‚úÖ', callback_data='accept'),
     InlineKeyboardButton(text='‚úèÔ∏è', callback_data='edit')]])


edit_personal_data_student = InlineKeyboardMarkup(
    inline_keyboard=[[InlineKeyboardButton(text='üéì–§–ò–û', callback_data="edit_students_initials"),
                      InlineKeyboardButton(text='–ì—Ä—É–ø–ø–∞', callback_data="edit_group")],
                     [InlineKeyboardButton(text='‚Ü©Ô∏è–ù–∞–∑–∞–¥', callback_data="backF")]])

edit_personal_data_teacher = InlineKeyboardMarkup(
    inline_keyboard=[[InlineKeyboardButton(text='üíº–§–ò–û', callback_data="edit_teachers_initials"),
                      InlineKeyboardButton(text='–ö–∞—Ñ–µ–¥—Ä–∞', callback_data="edit_teachers_department")],
                     [InlineKeyboardButton(text='‚Ü©Ô∏è–ù–∞–∑–∞–¥', callback_data="backF")]])

info_about_me = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='–õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')]], resize_keyboard=True)

main_buttuns_for_student = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text='üìÖ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ'), KeyboardButton(text='‚úÖ–ú–æ–µ –ø–æ—Å–µ—â–µ–Ω–∏–µ')],
              [KeyboardButton(text='üèÜ–†–µ–π—Ç–∏–Ω–≥'), KeyboardButton(text='üòé–ú–æ–µ –º–µ—Å—Ç–æ')],
              [KeyboardButton(text='‚ìò–õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')]], resize_keyboard=True)

main_buttuns_for_teachers = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text='üìÖ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ'), KeyboardButton(text='‚úÖ–ü–æ—Å–µ—â–µ–Ω–∏–µ')],
              [KeyboardButton(text='üèÜ–†–µ–π—Ç–∏–Ω–≥')],
              [KeyboardButton(text='‚ìò–õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')]], resize_keyboard=True)

accept_pair_for_teacher = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='‚úÖ', callback_data='accept_pair'),
     InlineKeyboardButton(text='‚ùå', callback_data='cancel_pair')]])

code_generation = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è', callback_data='generate_code')]])

accept_roll = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ', callback_data='accept__roll')]])

share_location = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='üìå –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≥–µ–æ–ø–æ–∑–∏—Ü–∏–µ–π', request_location=True)]], resize_keyboard=True)

add_or_delete = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='‚úÖ', callback_data='is_right'),
     InlineKeyboardButton(text='‚ûï', callback_data='add')]])

short_and_full_lessons = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫', callback_data='full_lessons'),
     InlineKeyboardButton(text='–°–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫', callback_data='short_lessons')]])

async def data_pair(teacher):
    all_pair = await get_data_pair(get_teachers_initials(teacher))
    keyboard = InlineKeyboardBuilder()
    all_date_pair = []
    for pair in all_pair:
        if pair.date not in all_date_pair:
            all_date_pair.append(pair.date)
    for date in all_date_pair:
        keyboard.add(InlineKeyboardButton(text=date, callback_data=f'pair_{date}'))
    keyboard.add(InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data='to_main'))
    return keyboard.adjust(3).as_markup()

async def number_pair(data_id, teacher):
    date_object = datetime.datetime.strptime(data_id, '%Y-%m-%d').date()
    all_number_pair = await get_number_pair_by_data(date_object, teacher)
    keyboard = InlineKeyboardBuilder()
    for num_pair in all_number_pair:
        keyboard.add(InlineKeyboardButton(text=num_pair.Number_pair, callback_data=f'numPair_{num_pair.id}'))
    keyboard.add(InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data='to_main'))
    return keyboard.adjust(2).as_markup()